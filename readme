This script was written in R version 3.0.3 and it uses randomizing function that might not work with older versions. 

I also used = sign for assigning values to vectors. It is fully compatible with later versions of R, but might produce errors with R before 3.0

Important to note, this script is not functional all the time. For some unknown reasons about one time out of ten it gets stuck in one of its while loops. If it does get stuck, it prints out an apology. You can try to enter your request again. Hopefully you will be luckier! 

What it does?

This script creates a sequence of numbers so that every possible pair of these numbers (three numbers: 12, 13, 23, 31, 21, 32) 
occurs given number of times.

# createSequence takes four parametres:

units : int - Number of different units/numbers you want to sequence 
iterations: int - Number of iterations of all the possible pairs. 
max_same: int - Number of times unit can occur after itself. Default is 0
sample_replace: boolean - Changes behaviour of sample.int function. Read the readme file to sample.int

check_sequence is a script written to evaluate the validity of a produced sequence. It returns a matrix in which the cells note the number of times 
given pair occurs in the string parameter.

# check_sequence takes two parameters:

sequence : string - Sequence you want to check
num : int - number of different units there are in a sequence

Example of what these script do:
```
> my_sequence = create_sequence(3, 1)
> my_sequence
[1] "2321312"

check_sequence(my_sequence, 3)

     [,1] [,2] [,3]
[1,]    0    1    1
[2,]    1    0    1
[3,]    1    1    0

> my_sequence = create_sequence(4,10)
> my_sequence
[1] "434324241232124314121213432413243214141423241314142424232324124121312312
1423213431323431434343413142312314234213421312134"

> check_sequence(my_sequence,4)
     [,1] [,2] [,3] [,4]
[1,]    0   10   10   10
[2,]   10    0   10   10
[3,]   10   10    0   10
[4,]   10   10   10    0

> my_sequence = create_sequence(4, 4, max_same = 4)
> my_sequence
[1] "34311321214341231443133324414222244341123412331323324242144221113"

> check_sequence(my_sequence, 4)	
     [,1] [,2] [,3] [,4]
[1,]    4    4    4    4
[2,]    4    4    4    4
[3,]    4    4    4    4
[4,]    4    4    4    4
```

## BVA Sequence
### create_bva_sequence
Takes many parameters
n_trials
n_points
max_same
ego_relation
allo_relation
min_start_distance
max_start_distance
max_mark_distance 
max_start_distance = 3
max_mark_distance = 4